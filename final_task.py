# Функция для сортировки списка без использования встроенного метода sorted()
def sort_list(lst):
    for i in range(len(lst)):
        # Пройдите по списку от i до конца, ища минимальный элемент
        min_idx = i
        for j in range(i+1, len(lst)):
            if lst[j] < lst[min_idx]:
                min_idx = j
        # Поменяйте местами текущий элемент с минимальным элементом
        lst[i], lst[min_idx] = lst[min_idx], lst[i]
    return lst

# Функция для выполнения бинарного поиска на отсортированном списке
def binary_search(lst, x):
    left, right = 0, len(lst)-1
    while left <= right:
        mid = (left + right) // 2
        if lst[mid] == x:
            return mid
        elif lst[mid] < x:
            left = mid + 1
        else:
            right = mid - 1
    return left

# Получить последовательность чисел от пользователя и преобразовать ее в список
lst = input("Введите последовательность целых чисел через пробел: ")
lst = lst.split()

# Проверка на соответствие условию ввода данных
if len(lst) == 0:
    print("Вы не ввели никаких чисел!")
    exit()

# Проверка на то, что пользователь вводит только числа
for num in lst:
    if not num.isdigit():
        print("Ошибка: введенные данные не являются целыми числами")
        exit()

# Преобразовать список строк в список целых чисел
lst = [int(x) for x in lst]

# Запросить у пользователя любое число и выполнить бинарный поиск в отсортированном списке
x = int(input("Введите число для поиска: "))
lst = sort_list(lst)
pos = binary_search(lst, x)
# Вывести отсортированный список
print("Отсортированный список:", lst)

# Проверка на соответствие условию ввода данных и результата
if pos >= len(lst):
    print(f"Число {x} больше всех введенных чисел.")
elif pos == 0:
    print(f"Число {x} меньше всех введенных чисел.")
else:
    print(f"Число {x} находится между числами на позициях {pos-1} и {pos}.")